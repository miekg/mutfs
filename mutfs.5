.\" Generated by Mmark Markdown Processer - mmark.miek.nl
.TH "MUTFS" 5 "November 2022" "File Formats Manual" "Mutfs Filesystem"

.SH "MUTFS"
.SH "NAME"
.PP
mutfs - immutable file system

.SH "SYNOPSIS"
.PP
\fB\fCmutfs [OPTION]...\fR \fIolddir\fP \fInewdir\fP

.SH "DESCRIPTION"
.PP
Mutfs is used as an overlay file system to make it immutable, write actions are only allowed when
creating a new file. Once things exists, they can't be changed or deleted.

.PP
Where options is a comma seperated list, currently supported:

.IP \(bu 4
\fB\fCdebug\fR: enable debug logging.
.IP \(bu 4
\fB\fCnull\fR: change \fInull\fP permissions to 0644 (files), 0755 (dirs).
.IP \(bu 4
\fB\fClog\fR: enable logging when a destructive action is tried.


.PP
Using \fB\fCmount -t mutfs ~ /tmp/mut -o debug\fR will use mutfs (\fIif\fP the executable (\fB\fCmount.mutfs\fR) can
be found in the path) to mount \fB\fC~\fR under \fB\fC/tmp\fR. Note that this "hangs" for as long the mount point
is mounted. Use the mutfs.sh shell script to make mutfs background.

.PP
Or you can install the following systemd mount unit:

.PP
.RS

.nf
[Unit]
Description=Immutable Filesystem
After=network.target

[Mount]
What=<olddir>
Where=<newdir>
Type=mutfs
Options=debug

[Install]
WantedBy=multi\-user.target

.fi
.RE

.SH "INSTALL"
.PP
Copy mutfs and mount.mutfs to /usr/sbin. And potentially add a line to /etc/fstab;

.PP
.RS

.nf
/home/miek    /tmp/mut         mutfs     log,nouser   0 0

.fi
.RE

.PP
And adjust as needed.

.SH "EXAMPLES"
.PP
For example mount your home directory on a directory in \fB\fC/tmp\fR: \fB\fC/mutfs ~ /tmp/mut\fR, then you can
create the file \fB\fCa\fR, but we can't update it after it's creation:

.PP
.RS

.nf
% cd /tmp/mut
% echo 1 > a
% cat a
1
% echo 2 > a
zsh: permission denied: a
% rm a
rm: cannot remove 'a': Permission denied

.fi
.RE

.SH "AUTHOR"
.PP
Miek Gieben miek@miek.nl
\[la]mailto:miek@miek.nl\[ra].

