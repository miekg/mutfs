.\" Generated by Mmark Markdown Processer - mmark.miek.nl
.TH "MUTFS" 5 "November 2022" "File Formats Manual" "Mutfs Filesystem"

.SH "MUTFS"
.SH "NAME"
.PP
mutfs - immutable file system, with write grace period

.SH "SYNOPSIS"
.PP
\fB\fCmutfs [OPTION]...\fR \fIolddir\fP \fInewdir\fP

.SH "DESCRIPTION"
.PP
Mutfs is used as an overlay file system to make it immutable, write actions are only allowed when
creating a new file (or within a user specific grace period). Once things exists, they can't be
changed or deleted. A use-case might be to protect an backed up archive from a ransomware attack.
The attack will still happen, but at least it can't delete the old files (nor the encrypted ones
once created).

.PP
Options are:

.IP \(bu 4
\fB\fC-o opt,...\fR, where \fB\fCopt\fR can be:

.RS
.IP \(en 4
\fB\fCdebug\fR: enable debug logging.
.IP \(en 4
\fB\fCnull\fR: change \fInull\fP permissions to 0644 (files), 0755 (dirs).
.IP \(en 4
\fB\fCallow_other\fR: everyone can access the files.
.IP \(en 4
\fB\fCro\fR: make fully read-only.
.IP \(en 4
\fB\fClog\fR: enable logging when a destructive action is tried.
.IP \(en 4
\fB\fCgrace=\fR\fIduration\fP, given a Go syntax duration will allow write operations for \fIduration\fP.

.RE


.PP
Using \fB\fCmount -t mutfs ~ /tmp/mut -o debug,grace=5s\fR will use mutfs (\fIif\fP the executable
(\fB\fCmount.mutfs\fR) can be found in the path) to mount \fB\fC~\fR under \fB\fC/tmp\fR. For up to 5 seconds after
file/directory creation destructive actions are allowed.

.PP
Note the grace period works by getting the files creation time via the \fB\fCstatx\fR system call, which
the underlying filesystem should support.

.PP
Or you can install the following systemd mount unit:

.PP
.RS

.nf
[Unit]
Description=Immutable Filesystem
After=network.target

[Mount]
What=<olddir>
Where=<newdir>
Type=mutfs
Options=debug,allow\_other

[Install]
WantedBy=multi\-user.target

.fi
.RE

.SH "INSTALL"
.PP
Copy mutfs and mount.mutfs to /usr/sbin. And potentially add a line to /etc/fstab;

.PP
.RS

.nf
/home/miek    /tmp/mut         mutfs     log,nouser,allow\_other   0 0

.fi
.RE

.PP
And adjust as needed.

.PP
Re-exporting the filesystem only works if \fB\fCallow_other\fR is specifed, otherwise the SMB/NFS daemon
cannot access the filesystem because only the user mounting it has access. Note unless you edit
\fB\fC/etc/fuse.conf\fR only root can create mounts with this option specified.

.SH "EXAMPLES"
.PP
For example mount your home directory on a directory in \fB\fC/tmp\fR: \fB\fC/mutfs ~ /tmp/mut\fR, then you can
create the file \fB\fCa\fR, but we can't update it after it's creation:

.PP
.RS

.nf
% cd /tmp/mut
% echo 1 > a
% cat a
1
% echo 2 > a
zsh: permission denied: a
% rm a
rm: cannot remove 'a': Permission denied

.fi
.RE

.SH "SEE ALSO"
.PP
fuse(8) stat(2)

.SH "AUTHOR"
.PP
Miek Gieben miek@miek.nl
\[la]mailto:miek@miek.nl\[ra].

